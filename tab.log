<program>
   1: 
   2: def w4():
  <stmt>
    <func def>
      <name>
      </name>
      <suite>
   3:     if n <= 9:
        <stmt>
          <if stmt>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <name>
                            </name>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                    <comp opr>
                    </comp opr>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <integer literal>
                            </integer literal>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
            <suite>
   4:         return '   ' + str(n)
              <stmt>
                <return stmt>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <string literal>
                                  </string literal>
                                </atom>
                              </primary>
                            </factor>
                            <term opr>
                            </term opr>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                                <primary suffix>
                                  <arguments>
                                    <expr>
                                      <and test>
                                        <not test>
                                          <comparison>
                                            <term>
                                              <factor>
                                                <primary>
                                                  <atom>
                                                    <name>
                                                    </name>
                                                  </atom>
                                                </primary>
                                              </factor>
                                            </term>
                                          </comparison>
                                        </not test>
                                      </and test>
                                    </expr>
                                  </arguments>
                                </primary suffix>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                </return stmt>
              </stmt>
   5:     elif n <= 99:
            </suite>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <name>
                            </name>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                    <comp opr>
                    </comp opr>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <integer literal>
                            </integer literal>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
            <suite>
   6:         return '  ' + str(n)
              <stmt>
                <return stmt>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <string literal>
                                  </string literal>
                                </atom>
                              </primary>
                            </factor>
                            <term opr>
                            </term opr>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                                <primary suffix>
                                  <arguments>
                                    <expr>
                                      <and test>
                                        <not test>
                                          <comparison>
                                            <term>
                                              <factor>
                                                <primary>
                                                  <atom>
                                                    <name>
                                                    </name>
                                                  </atom>
                                                </primary>
                                              </factor>
                                            </term>
                                          </comparison>
                                        </not test>
                                      </and test>
                                    </expr>
                                  </arguments>
                                </primary suffix>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                </return stmt>
              </stmt>
   7:     elif n <= 999:
            </suite>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <name>
                            </name>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                    <comp opr>
                    </comp opr>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <integer literal>
                            </integer literal>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
            <suite>
   8:         return ' ' + str(n)
              <stmt>
                <return stmt>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <string literal>
                                  </string literal>
                                </atom>
                              </primary>
                            </factor>
                            <term opr>
                            </term opr>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                                <primary suffix>
                                  <arguments>
                                    <expr>
                                      <and test>
                                        <not test>
                                          <comparison>
                                            <term>
                                              <factor>
                                                <primary>
                                                  <atom>
                                                    <name>
                                                    </name>
                                                  </atom>
                                                </primary>
                                              </factor>
                                            </term>
                                          </comparison>
                                        </not test>
                                      </and test>
                                    </expr>
                                  </arguments>
                                </primary suffix>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                </return stmt>
              </stmt>
   9:     else:
            </suite>
            <suite>
  10:         return str(n)
              <stmt>
                <return stmt>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                                <primary suffix>
                                  <arguments>
                                    <expr>
                                      <and test>
                                        <not test>
                                          <comparison>
                                            <term>
                                              <factor>
                                                <primary>
                                                  <atom>
                                                    <name>
                                                    </name>
                                                  </atom>
                                                </primary>
                                              </factor>
                                            </term>
                                          </comparison>
                                        </not test>
                                      </and test>
                                    </expr>
                                  </arguments>
                                </primary suffix>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                </return stmt>
              </stmt>
  11: 
  12: find_primes()
            </suite>
          </if stmt>
        </stmt>
      </suite>
    </func def>
  </stmt>
  <stmt>
    <expr stmt>
      <expr>
        <and test>
          <not test>
            <comparison>
              <term>
                <factor>
                  <primary>
                    <atom>
                      <name>
                      </name>
                    </atom>
                    <primary suffix>
                      <arguments>
                      </arguments>
                    </primary suffix>
                  </primary>
                </factor>
              </term>
            </comparison>
          </not test>
        </and test>
      </expr>
    </expr stmt>
  </stmt>
  13: list_primes()
  <stmt>
    <expr stmt>
      <expr>
        <and test>
          <not test>
            <comparison>
              <term>
                <factor>
                  <primary>
                    <atom>
                      <name>
                      </name>
                    </atom>
                    <primary suffix>
                      <arguments>
                      </arguments>
                    </primary suffix>
                  </primary>
                </factor>
              </term>
            </comparison>
          </not test>
        </and test>
      </expr>
    </expr stmt>
  </stmt>
</program>
PP> def w4():
